package com.nomansoftech.repository;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.transaction.annotation.Transactional;

import com.nomansoftech.entities.Order;
import com.nomansoftech.entities.OrderItem;
import com.nomansoftech.entities.ProductSummary;
import com.nomansoftech.entities.User;

public interface UserRepository  extends JpaRepository<User, Integer>{
	
	

//	@Query("SELECT i FROM OrderItem i WHERE i.order.orderId = :orderId")
//	List<OrderItem> findOrderItemsByOrderId(@Param("orderId") int orderId);


	    // Monthly summary for a specific user
	    @Query("SELECT NEW com.nomansoftech.entities.ProductSummary(" +
	           "c.categoryId, c.categoryName, SUM(i.quantityKg), 'Monthly') " +
	           "FROM Order o " +
	           "JOIN o.items i " +
	           "JOIN i.subCategory sc " +
	           "JOIN sc.category c " +
	           "WHERE o.user.id = :userId " +
	           "AND MONTH(o.orderDateTime) = MONTH(CURRENT_DATE) " +
	           "AND YEAR(o.orderDateTime) = YEAR(CURRENT_DATE) " +
	           "GROUP BY c.categoryId, c.categoryName")
	    List<ProductSummary> findMonthlyByUserId(int userId);

	    // Yearly summary for a specific user
	    @Query("SELECT NEW com.nomansoftech.entities.ProductSummary(" +
	           "c.categoryId, c.categoryName, SUM(i.quantityKg), 'Yearly') " +
	           "FROM Order o " +
	           "JOIN o.items i " +
	           "JOIN i.subCategory sc " +
	           "JOIN sc.category c " +
	           "WHERE o.user.id = :userId " +
	           "AND YEAR(o.orderDateTime) = YEAR(CURRENT_DATE) " +
	           "GROUP BY c.categoryId, c.categoryName")
	    List<ProductSummary> findYearlyByUserId(int userId);

	    // Monthly summary for all users
	    @Query("SELECT NEW com.nomansoftech.entities.ProductSummary(" +
	           "o.user.id, 'All Categories', SUM(i.quantityKg), 'Monthly') " +
	           "FROM Order o " +
	           "JOIN o.items i " +
	           "GROUP BY o.user.id")
	    List<ProductSummary> findMonthlyForAll();

	    // Yearly summary for all users
	    @Query("SELECT NEW com.nomansoftech.entities.ProductSummary(" +
	           "o.user.id, 'All Categories', SUM(i.quantityKg), 'Yearly') " +
	           "FROM Order o " +
	           "JOIN o.items i " +
	           "GROUP BY o.user.id")
	    List<ProductSummary> findYearlyForAll();
	}
